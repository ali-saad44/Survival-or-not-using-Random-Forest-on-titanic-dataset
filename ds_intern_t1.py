# -*- coding: utf-8 -*-
"""Ds intern T1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DEn3VCxeTSwaP1gPg4NKA3I-EEAWFHFT

# Import data from kaggle
"""

!pip install kaggle

!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

!kaggle competitions download -c titanic
!unzip titanic.zip -d titanic

!cp -r titanic /content/drive/MyDrive/

import pandas as pd

df = pd.read_csv('/content/drive/MyDrive/titanic/train.csv')
print(df.head())

"""# **Step 1: Import Libraries**"""

import pandas as pd
import numpy as np

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

import seaborn as sns
import matplotlib.pyplot as plt

train_path = "/content/drive/MyDrive/titanic/train.csv"
test_path = "/content/drive/MyDrive/titanic/test.csv"

# Load data
df = pd.read_csv(train_path)
print(df.head())

"""# Step 2: Data Cleaning & Preprocessing"""

# Keep only relevant columns
df = df[["Survived", "Pclass", "Sex", "Age", "Fare"]]

# Handle missing values (Age has some NaNs)
df["Age"].fillna(df["Age"].median(), inplace=True)

# Encode 'Sex' (male=0, female=1)
df["Sex"] = df["Sex"].map({"male": 0, "female": 1})

print(df.head(10))

X = df[["Pclass", "Sex", "Age", "Fare"]]  # Features
y = df["Survived"]  # Target (0 = No, 1 = Yes)

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)



"""# *Step 3: Train Model*"""

from sklearn.ensemble import RandomForestClassifier

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

"""# **Step 4: Evaluate Model**"""

from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt

print("âœ… Accuracy:", accuracy_score(y_test, y_pred))
print("\nðŸ“Š Classification Report:\n", classification_report(y_test, y_pred))

# Confusion Matrix
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt="d", cmap="Blues")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix")
plt.show()

sns.countplot(data=df, x="Survived", palette="viridis")
plt.title("Survival Distribution (0 = Died, 1 = Survived)")
plt.show()

sns.countplot(data=df, x="Sex", hue="Survived", palette="Set2")
plt.title("Survival by Gender")
plt.show()

sns.histplot(data=df, x="Age", hue="Survived", bins=30, kde=True, palette="mako")
plt.title("Age Distribution by Survival")
plt.show()

sns.pairplot(df, hue="Survived", diag_kind="kde", palette="husl")
plt.suptitle("Feature Relationships by Survival", y=1.02)
plt.show()